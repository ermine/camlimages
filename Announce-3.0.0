I'm glad to announce the availability of the 3.0.0 version of the
CamlImages library, by Jun Furuse, François Pessaux, and Pierre Weis.

CamlImages is an image processing library, which provides to the
objective Caml programmer a lot of image processing functionality.

CamlImages provides to the objective Caml programmer:

  ** basic functions for image processing and loading/saving various image
  file formats (hence providing a translation facility from format to format),

  ** an interface with the Caml graphics library allows to display
  images in the Graphics module screen and to mix them with Caml
  drawings,

  ** a freetype interface, integrated into the library:
  you can draw texts into images using any truetype fonts,

  ** a set of example programs, including gif animation, slide show,
  and a postscript converter to print images.

The version 3.0.0 is a stable development release:

- code has been made up-to-date with the latest revision of the Objective-Caml
compiler.

- better integration with the rest of the Objective Caml system by
renaming of the main module, originally named "Image", into the new
module name "Images". This solves a long standing problem of name
clashes with other module names provided by other libraries. However,
this is not backward compatible and you will have to modify your old
programs according to the new naming scheme: you must change
references to Image.x into references to Images.x (and similarly from
oImage.x to oImages.x). As usual, the Caml compiler will help a lot to
point out obsolete name occurrences.

- the whole set of compiled files are now installed in the library
installation directory (generally /usr/local/lib/ocaml/camlimages).

- a new export for the Ps module:
  get_bounding_box : string -> bounding_box
  returns he bounding box option of a postscript file image.

Sources and documentation are available from:

http://cristal.inria.fr/camlimages/eng.htm

ftp://ftp.inria.fr/INRIA/Projects/cristal/caml-light/bazar-ocaml/camlimages-3.0.0.tgz

Contributions and comments are welcome.

Pierre Weis
